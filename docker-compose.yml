
services:
  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]
    environment:
      - PORT=3000
      - PRODUCT_MICROSERVICE_HOST=localhost
      - PRODUCT_MICROSERVICE_PORT=3002
      - ORDER_MICROSERVICE_HOST=localhost
      - ORDER_MICROSERVICE_PORT=3003
      - NATS_SERVERS=nats://nats-server:4222
  
  products-ms:
    build: ./products-ms
    ports:
      - 3002:3002
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345 
      POSTGRES_DB: ordersdb 
  
  orders-ms:
    build: ./orders-ms
    ports:
      - 3003:3003
    depends_on:
      - orders-db
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]
    environment:
      - PORT=3003
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=postgresql://postgres:12345@orders-db:5432/ordersdb?schema=public
      - PRODUCT_MICROSERVICE_HOST=localhost
      - PRODUCT_MICROSERVICE_PORT=3002
    
  payments-ms:
    build: ./payments-ms
    ports:
      - ${PAYMENT_MS_PORT}:${PAYMENT_MS_PORT}
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]
    environment:
      - PORT=${PAYMENT_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINT_SECRET=${STRIPE_ENDPOINT_SECRET}